#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

&caps_word {
  continue-list = <UNDERSCORE BACKSPACE DELETE LS(SLASH)>;
};

/ {
    behaviors {
      #include "macros.dtsi"

      hm: homerow_mods {
          compatible = "zmk,behavior-hold-tap";
          label = "HOMEROW_MODS";
          #binding-cells = <2>;
          tapping-term-ms = <200>;
          quick_tap_ms = <175>;
          flavor = "tap-preferred";
          bindings = <&kp>, <&kp>;
      };
    };

  keymap {
    compatible = "zmk,keymap";

    default_layer {
      bindings = <
        &kp ESC       &kp LS(N1)    &kp RA(N8)     &kp RA(N7)    &kp LS(N8)    &kp BSLH     &kp SPACE                                                                                                      &none                  &kp LS(RBKT) &kp LS(N9)   &kp RA(N0)     &kp RA(N9)    &kp LS(N6)    &none
        &kp TAB       &kp Q         &kp W          &kp E         &kp R         &kp T        &kp LS(BSLH)                                                                                                   &kp LS(N2)             &kp Z        &kp U        &kp I          &kp O         &kp P         &kp LBKT
        &kp LSHFT     &kp A         &kp S          &kp D         &kp F         &kp G        &kp LS(N7)                             &kp LCTRL  &kp LS(LCTRL)          &kp LGUI   &kp RCTRL                  &kp FSLH               &kp H        &kp J        &kp K          &kp L         &kp SEMI      &kp RSHFT
        &mo 3         &kp Y         &kp X          &kp C         &kp V         &kp B                               &none           &none      &kp DEL    &none &none &kp CAPS   &none      &none                                  &kp N        &kp M        &kp COMMA      &kp DOT       &kp MINUS     &kp SQT
        &kp LALT      &kp LS(EQUAL) &kp RBKT       &kp RA(Q)     &kp RA(MINUS)                                     &kp BSPC        &mo 2      &mo 1                  &caps_word &kp ENTER  &kp SPACE                                           &kp ESC      &kp LS(SLASH)  &kp LS(N0)    &kp LS(N5)    &kp LALT
      >;
    };
    nav_cmd {
      bindings = <
        &trans        &bt BT_SEL 0 &bt BT_SEL 1   &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4 &bootloader                                                                                                    &bootloader            &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2   &bt BT_SEL 3  &bt BT_SEL 4  &trans
        &none         &trans       &kp LC(LS(X))  &macro_pdepot &kp LC(Z)     &trans       &none                                                                                                          &none                  &kp LC(LEFT) &kp HOME     &kp END        &kp LC(RIGHT) &trans        &trans
        &trans        &trans       &kp LA(LSHIFT) &trans        &kp LC(PSCRN) &trans       &rgb_ug RGB_MEFS_CMD 5                 &bt BT_CLR &bt BT_CLR             &bt BT_CLR &bt BT_CLR                 &rgb_ug RGB_MEFS_CMD 5 &kp LEFT     &kp DOWN     &kp UP         &kp RIGHT     &kp LA(TAB)   &trans
        &trans        &trans       &trans         &trans        &trans        &trans                              &none           &none      &trans     &none &none &trans     &none      &none                                  &trans       &kp LG(N1)   &kp LG(N2)     &kp LG(N3)    &kp LG(N4)    &trans
        &trans        &trans       &trans         &bl BL_INC    &bl BL_DEC                                        &rgb_ug RGB_TOG &bl BL_TOG &trans                 &none      &bl BL_TOG &rgb_ug RGB_TOG                                     &bl BL_INC   &bl BL_DEC     &trans        &trans        &kp INS
      >;
    };
    sym_fn {
      bindings = <
        &trans        &kp F1       &kp F2         &kp F3        &kp F4        &kp F5       &trans                                                                                                         &trans                 &kp F6       &kp F7       &kp F8         &kp F9        &kp F10       &trans
        &trans        &trans       &trans         &trans        &trans        &trans       &none                                                                                                          &kp F11                &trans       &trans       &trans         &trans        &trans        &trans
        &trans        &trans       &kp NON_US_BACKSLASH &kp GRAVE &kp RA(NON_US_BACKSLASH)  &trans       &none                    &trans     &trans                 &trans      &trans                    &kp F12                &trans       &kp RA(RBKT) &kp LS(N4)     &kp LS(NON_US_BACKSLASH)    &trans     &trans
        &trans        &trans       &trans         &trans        &trans        &trans                              &none           &none      &trans     &none &none &trans      &none     &none                                  &trans       &trans       &trans         &trans        &trans        &trans
        &trans        &trans       &trans         &trans        &trans                                            &trans          &none      &trans                 &trans      &trans    &trans                                              &trans       &trans         &trans        &trans        &trans
      >;
    };
    num {
      bindings = <
        &trans        &trans       &trans         &trans        &trans        &trans       &trans                                                                                                         &trans                 &trans       &kp KP_NUM   &kp LS(N0)     &kp KP_DIVIDE &kp KP_MULTIPLY &trans
        &trans        &trans       &trans         &trans        &trans        &trans       &none                                                                                                          &trans                 &trans       &kp KP_N7    &kp KP_N8      &kp KP_N9     &kp KP_MINUS  &trans
        &trans        &trans       &trans         &trans        &trans        &trans       &none                                  &trans     &trans                 &trans      &trans                    &trans                 &trans       &kp KP_N4    &kp KP_N5      &kp KP_N6     &kp KP_PLUS   &trans
        &none         &trans       &trans         &trans        &trans        &trans                              &none           &none      &trans     &none &none &trans      &none     &none                                  &kp RA(E)    &kp KP_N1    &kp KP_N2      &kp KP_N3     &kp LS(DOT)   &trans
        &trans        &trans       &trans         &trans        &trans                                            &trans          &kp ENTER  &trans                 &trans      &trans    &kp KP_N0                                           &kp SPACE    &kp COMMA      &kp DOT       &trans        &trans
      >;
    };
  };
};
